var N=null,E="",T="t",U="u",searchIndex={};

searchIndex["core_arch"]={"doc":"SIMD and vendor intrinsics module.","i":[[0,"wasm32","core_arch","Platform-specific intrinsics for the `wasm32` platform.",N,N],[5,"memory_size","core_arch::wasm32","Corresponding intrinsic to wasm's [`memory.size`…",N,[[["u32"]],["usize"]]],[5,"memory_grow",E,"Corresponding intrinsic to wasm's [`memory.grow`…",N,[[["u32"],["usize"]],["usize"]]],[5,"unreachable",E,"Generates the trap instruction `UNREACHABLE`",N,[[]]]],"p":[]};
searchIndex["std_detect"]={"doc":"Run-time feature detection for the Rust standard library.","i":[[14,"is_x86_feature_detected","std_detect","Prevents compilation if `is_x86_feature_detected` is used…",N,N],[14,"is_arm_feature_detected",E,"Prevents compilation if `is_arm_feature_detected` is used…",N,N],[14,"is_aarch64_feature_detected",E,"Prevents compilation if `is_aarch64_feature_detected` is…",N,N],[14,"is_powerpc_feature_detected",E,"Prevents compilation if `is_powerpc_feature_detected` is…",N,N],[14,"is_powerpc64_feature_detected",E,"Prevents compilation if `is_powerpc64_feature_detected` is…",N,N],[14,"is_mips_feature_detected",E,"Prevents compilation if `is_mips_feature_detected` is used…",N,N],[14,"is_mips64_feature_detected",E,"Prevents compilation if `is_mips64_feature_detected` is…",N,N]],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);